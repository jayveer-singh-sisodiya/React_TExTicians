{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jayve\\\\react\\\\react_TextUtils\\\\myreact\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import About from \"./components/about\";\nimport { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"light\"); // whether dark mode is enable or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const [theme, setTheme] = useState(\"dark\");\n  const [btnMode, setBtnMode] = useState(\"dark\");\n  const clickDark = () => {\n    setTheme(\"dark\");\n    setMode(\"dark\");\n    setBtnMode(\"light\");\n    document.body.style.color = \"white\";\n    document.body.style.backgroundColor = \"#272727\";\n    showAlert(\"Dark mode is enabled\", \"primary\");\n  };\n  const clickLight = () => {\n    setTheme(\"light\");\n    setMode(\"light\");\n    setBtnMode(\"dark\");\n    document.body.style.color = \"black\";\n    document.body.style.backgroundColor = \"White\";\n    showAlert(\"Light mode is enabled\", \"success\");\n  };\n  const clickBlue = () => {\n    setTheme(\"dark\");\n    setMode(\"blue\");\n    setBtnMode(\"light\");\n    document.body.style.color = \"white\";\n    document.body.style.backgroundColor = \"#240952\";\n    showAlert(\"Blue Theme enabled\", \"success\");\n  };\n  const clickGreen = () => {\n    setTheme(\"light\");\n    setMode(\"green\");\n    setBtnMode(\"dark\");\n    document.body.style.color = \"White\";\n    document.body.style.backgroundColor = \"#0D2818\";\n    showAlert(\"Green Theme enabled\", \"success\");\n  };\n  return (\n    /*#__PURE__*/\n    // <Router>\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"Texticians\",\n        about: \"About Us\",\n        theme: theme,\n        clickBlue: clickBlue,\n        clickGreen: clickGreen,\n        clickLight: clickLight,\n        clickDark: clickDark,\n        mode: mode,\n        btnMode: btnMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(TextForm, {\n          heading: \"Enter the text to analyze\",\n          mode: mode,\n          btnMode: btnMode,\n          clickDark: clickDark,\n          showAlert: showAlert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n    /* </Router> */\n  );\n}\n_s(App, \"dKQJwhUT4mZN89jEQWwCKW9wkYI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextForm","useState","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","theme","setTheme","btnMode","setBtnMode","clickDark","document","body","style","color","backgroundColor","clickLight","clickBlue","clickGreen","children","title","about","fileName","_jsxFileName","lineNumber","columnNumber","className","heading","_c","$RefreshReg$"],"sources":["C:/Users/jayve/react/react_TextUtils/myreact/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import About from \"./components/about\";\nimport { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); // whether dark mode is enable or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const [theme, setTheme] = useState(\"dark\");\n  const [btnMode, setBtnMode] = useState(\"dark\");\n  const clickDark = () => {\n    setTheme(\"dark\");\n    setMode(\"dark\");\n    setBtnMode(\"light\");\n    document.body.style.color = \"white\";\n    document.body.style.backgroundColor = \"#272727\";\n    showAlert(\"Dark mode is enabled\", \"primary\");\n  };\n  const clickLight = () => {\n    setTheme(\"light\");\n    setMode(\"light\");\n    setBtnMode(\"dark\");\n    document.body.style.color = \"black\";\n    document.body.style.backgroundColor = \"White\";\n    showAlert(\"Light mode is enabled\", \"success\");\n  };\n  const clickBlue = () => {\n    setTheme(\"dark\");\n    setMode(\"blue\");\n    setBtnMode(\"light\");\n    document.body.style.color = \"white\";\n    document.body.style.backgroundColor = \"#240952\";\n    showAlert(\"Blue Theme enabled\", \"success\");\n  };\n  const clickGreen = () => {\n    setTheme(\"light\");\n    setMode(\"green\");\n    setBtnMode(\"dark\");\n    document.body.style.color = \"White\";\n    document.body.style.backgroundColor = \"#0D2818\";\n    showAlert(\"Green Theme enabled\", \"success\");\n  };\n\n  return (\n    // <Router>\n      <>\n        <Navbar\n          title=\"Texticians\"\n          about=\"About Us\"\n          theme={theme}\n          clickBlue={clickBlue}\n          clickGreen={clickGreen}\n          clickLight={clickLight}\n          clickDark={clickDark}\n          mode={mode}\n          btnMode={btnMode}\n        ></Navbar>\n        <Alert alert={alert}></Alert>\n\n        <div className=\"container\">\n          {/* <Routes>\n            <Route exact path=\"/About\" element={<About mode={mode}></About>} />\n\n            <Route\n              exact path=\"/\"\n              element={ */}\n                <TextForm\n                  heading=\"Enter the text to analyze\"\n                  mode={mode}\n                  btnMode={btnMode}\n                  clickDark={clickDark}\n                  showAlert={showAlert}\n                ></TextForm>\n              {/* }\n            />\n          </Routes> */}\n        </div>\n      </>\n    /* </Router> */\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C;AACA,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,oBAAoB;AACtC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMY,SAAS,GAAGA,CAACC,OAAO,EAAEC,IAAI,KAAK;IACnCH,QAAQ,CAAC;MACPI,GAAG,EAAEF,OAAO;MACZC,IAAI,EAAEA;IACR,CAAC,CAAC;IACFE,UAAU,CAAC,MAAM;MACfL,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,MAAM,CAAC;EAC1C,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,MAAM,CAAC;EAC9C,MAAMqB,SAAS,GAAGA,CAAA,KAAM;IACtBH,QAAQ,CAAC,MAAM,CAAC;IAChBT,OAAO,CAAC,MAAM,CAAC;IACfW,UAAU,CAAC,OAAO,CAAC;IACnBE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,KAAK,GAAG,OAAO;IACnCH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,eAAe,GAAG,SAAS;IAC/Cd,SAAS,CAAC,sBAAsB,EAAE,SAAS,CAAC;EAC9C,CAAC;EACD,MAAMe,UAAU,GAAGA,CAAA,KAAM;IACvBT,QAAQ,CAAC,OAAO,CAAC;IACjBT,OAAO,CAAC,OAAO,CAAC;IAChBW,UAAU,CAAC,MAAM,CAAC;IAClBE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,KAAK,GAAG,OAAO;IACnCH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,eAAe,GAAG,OAAO;IAC7Cd,SAAS,CAAC,uBAAuB,EAAE,SAAS,CAAC;EAC/C,CAAC;EACD,MAAMgB,SAAS,GAAGA,CAAA,KAAM;IACtBV,QAAQ,CAAC,MAAM,CAAC;IAChBT,OAAO,CAAC,MAAM,CAAC;IACfW,UAAU,CAAC,OAAO,CAAC;IACnBE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,KAAK,GAAG,OAAO;IACnCH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,eAAe,GAAG,SAAS;IAC/Cd,SAAS,CAAC,oBAAoB,EAAE,SAAS,CAAC;EAC5C,CAAC;EACD,MAAMiB,UAAU,GAAGA,CAAA,KAAM;IACvBX,QAAQ,CAAC,OAAO,CAAC;IACjBT,OAAO,CAAC,OAAO,CAAC;IAChBW,UAAU,CAAC,MAAM,CAAC;IAClBE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,KAAK,GAAG,OAAO;IACnCH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,eAAe,GAAG,SAAS;IAC/Cd,SAAS,CAAC,qBAAqB,EAAE,SAAS,CAAC;EAC7C,CAAC;EAED;IAAA;IACE;IACET,OAAA,CAAAE,SAAA;MAAAyB,QAAA,gBACE3B,OAAA,CAACL,MAAM;QACLiC,KAAK,EAAC,YAAY;QAClBC,KAAK,EAAC,UAAU;QAChBf,KAAK,EAAEA,KAAM;QACbW,SAAS,EAAEA,SAAU;QACrBC,UAAU,EAAEA,UAAW;QACvBF,UAAU,EAAEA,UAAW;QACvBN,SAAS,EAAEA,SAAU;QACrBb,IAAI,EAAEA,IAAK;QACXW,OAAO,EAAEA;MAAQ;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eACVjC,OAAA,CAACF,KAAK;QAACS,KAAK,EAAEA;MAAM;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAE7BjC,OAAA;QAAKkC,SAAS,EAAC,WAAW;QAAAP,QAAA,eAOlB3B,OAAA,CAACJ,QAAQ;UACPuC,OAAO,EAAC,2BAA2B;UACnC9B,IAAI,EAAEA,IAAK;UACXW,OAAO,EAAEA,OAAQ;UACjBE,SAAS,EAAEA,SAAU;UACrBT,SAAS,EAAEA;QAAU;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIf,CAAC;IAAA,eACN;IACJ;EAAA;AAEJ;AAAC7B,EAAA,CAtFQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAwFZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}