{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jayve\\\\react\\\\myreact\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/about\";\nimport { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport Theme from \"./components/Theme\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App(props) {\n  _s();\n  const [mode, setMode] = useState(\"light\"); // whether dark mode is enable or not \n  // const [alert, setAlert] = useState(null);\n\n  // const showAlert = (message, type) =>\n  // {\n  //     setAlert({\n  //       msg :message,\n  //       type:type\n  //     })\n  //     setTimeout(()=>\n  //     {\n  //        setAlert(null) \n  //     },1500\n  //     )\n  // }\n\n  const [btnMode, setBtnMode] = useState(\"dark\");\n  const toggelMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      setBtnMode(\"light\");\n      document.body.style.color = \"white\";\n      document.body.style.backgroundColor = \"#272727\";\n      props.showAlert(\"Dark mode is enabled\", \"primary\");\n    } else {\n      setMode(\"light\");\n      setBtnMode(\"dark\");\n      document.body.style.color = \"black\";\n      document.body.style.backgroundColor = \"White\";\n      props.showAlert(\"Light mode is enabled\", \"success\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      about: \"About Us\",\n      toggelMode: toggelMode,\n      mode: mode,\n      btnMode: btnMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: props.alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        heading: \"Enter the text to analyze\",\n        mode: mode,\n        btnMode: btnMode,\n        showAlert: props.showAlert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(About, {\n      toggelMode: toggelMode,\n      mode: mode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Theme, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"yQNzuiDzGPFABMEVlP7QygKBXJM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","TextForm","About","useState","Alert","Theme","jsxDEV","_jsxDEV","Fragment","_Fragment","App","props","_s","mode","setMode","btnMode","setBtnMode","toggelMode","document","body","style","color","backgroundColor","showAlert","children","title","about","fileName","_jsxFileName","lineNumber","columnNumber","alert","className","heading","_c","$RefreshReg$"],"sources":["C:/Users/jayve/react/myreact/src/App.js"],"sourcesContent":["\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/about\";\nimport { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport Theme from \"./components/Theme\";\nfunction App(props) {\n\n  const [mode, setMode] = useState(\"light\"); // whether dark mode is enable or not \n  // const [alert, setAlert] = useState(null);\n\n  // const showAlert = (message, type) =>\n  // {\n  //     setAlert({\n  //       msg :message,\n  //       type:type\n  //     })\n  //     setTimeout(()=>\n  //     {\n  //        setAlert(null) \n  //     },1500\n  //     )\n  // }\n\n  const [btnMode,setBtnMode] = useState(\"dark\"); \n  const toggelMode = ( ) =>\n  {\n    if(mode === \"light\")\n    {\n      setMode (\"dark\");\n      setBtnMode (\"light\");\n      document.body.style.color = \"white\";\n      document.body.style.backgroundColor = \"#272727\";\n      props.showAlert(\"Dark mode is enabled\",\"primary\")\n\n    }\n    else\n    {\n      setMode  (\"light\");\n      setBtnMode  (\"dark\");\n      document.body.style.color = \"black\";\n      document.body.style.backgroundColor = \"White\";\n      props.showAlert(\"Light mode is enabled\",\"success\")\n    }\n  }\n  \n  return (\n    <>\n    <Navbar title=\"TextUtils\" about =\"About Us\" toggelMode={toggelMode}  mode={mode} btnMode={btnMode}></Navbar>\n    <Alert alert={props.alert}></Alert>\n    <div className=\"container\">\n      <TextForm heading =\"Enter the text to analyze\" mode={mode} btnMode={btnMode} showAlert={props.showAlert}></TextForm>\n    </div>\n    <About toggelMode={toggelMode} mode={mode}></About>\n    <Theme></Theme>\n   </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACvC,SAASC,GAAGA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAElB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EAC3C;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM,CAACY,OAAO,EAACC,UAAU,CAAC,GAAGb,QAAQ,CAAC,MAAM,CAAC;EAC7C,MAAMc,UAAU,GAAGA,CAAA,KACnB;IACE,IAAGJ,IAAI,KAAK,OAAO,EACnB;MACEC,OAAO,CAAE,MAAM,CAAC;MAChBE,UAAU,CAAE,OAAO,CAAC;MACpBE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,KAAK,GAAG,OAAO;MACnCH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,eAAe,GAAG,SAAS;MAC/CX,KAAK,CAACY,SAAS,CAAC,sBAAsB,EAAC,SAAS,CAAC;IAEnD,CAAC,MAED;MACET,OAAO,CAAG,OAAO,CAAC;MAClBE,UAAU,CAAG,MAAM,CAAC;MACpBE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,KAAK,GAAG,OAAO;MACnCH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,eAAe,GAAG,OAAO;MAC7CX,KAAK,CAACY,SAAS,CAAC,uBAAuB,EAAC,SAAS,CAAC;IACpD;EACF,CAAC;EAED,oBACEhB,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACAjB,OAAA,CAACP,MAAM;MAACyB,KAAK,EAAC,WAAW;MAACC,KAAK,EAAE,UAAU;MAACT,UAAU,EAAEA,UAAW;MAAEJ,IAAI,EAAEA,IAAK;MAACE,OAAO,EAAEA;IAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eAC5GvB,OAAA,CAACH,KAAK;MAAC2B,KAAK,EAAEpB,KAAK,CAACoB;IAAM;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnCvB,OAAA;MAAKyB,SAAS,EAAC,WAAW;MAAAR,QAAA,eACxBjB,OAAA,CAACN,QAAQ;QAACgC,OAAO,EAAE,2BAA2B;QAACpB,IAAI,EAAEA,IAAK;QAACE,OAAO,EAAEA,OAAQ;QAACQ,SAAS,EAAEZ,KAAK,CAACY;MAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjH,CAAC,eACNvB,OAAA,CAACL,KAAK;MAACe,UAAU,EAAEA,UAAW;MAACJ,IAAI,EAAEA;IAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnDvB,OAAA,CAACF,KAAK;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACd,CAAC;AAEN;AAAClB,EAAA,CAnDQF,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAqDZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}